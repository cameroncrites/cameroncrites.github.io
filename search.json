[
  {
    "objectID": "posts/ncaa-brackets-with-machine-learning/index.html",
    "href": "posts/ncaa-brackets-with-machine-learning/index.html",
    "title": "An Efficient Disaster: Why efficiency doesn’t always predict wins and losses in college basketball",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(hoopR)\nlibrary(zoo)\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(janitor)\nlibrary(gt)\n\nset.seed(1234)\n\ngames &lt;- load_mbb_team_box(2015:2023) %&gt;% filter(game_date &lt; as.Date(\"2023-03-14\"))\n\ngameswithpossession &lt;- games %&gt;%\n  mutate(\n    possessions = round(field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted), digits = 0),\n    points_per_100 = (team_score/possessions)*100,\n    assist_turn_ratio = assists/total_turnovers,\n    effective_fga = (field_goals_made + 0.5 * three_point_field_goals_made) / field_goals_attempted,\n    free_throw_rate = free_throws_attempted / field_goals_attempted,\n    free_throw_made_rate = free_throws_made / field_goals_made\n  ) %&gt;%\n  filter(possessions &lt;= 90 & possessions &gt;=53)\n\nrollingteamstats &lt;- gameswithpossession %&gt;% \n  arrange(game_date) %&gt;%\n  group_by(team_short_display_name, season) %&gt;%\n  mutate(\n    team_rolling_ppp = rollmean(lag(points_per_100, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_atr = rollmean(lag(assist_turn_ratio, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_effective_fga = rollmean(lag(effective_fga, n=1), k=5, align=\"right\", fill=NA),\n    team_cumulative_ppp = lag(cummean(points_per_100), n=1),\n    team_rolling_ftr = rollmean(lag(free_throw_rate, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_made_ftr = rollmean(lag(free_throw_made_rate, n=1), k=5, align=\"right\", fill=NA)\n    ) %&gt;% \n  ungroup()\n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_team_id, \n    game_date, \n    season, \n    team_score, \n    team_rolling_ppp,\n    team_rolling_atr,\n    team_rolling_effective_fga,\n    team_cumulative_ppp,\n    team_rolling_ftr,\n    team_rolling_made_ftr\n    ) %&gt;% \n  na.omit() \n\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;% \n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_atr = team_rolling_atr,\n    opponent_rolling_effective_fga = team_rolling_effective_fga,\n    opponent_cumulative_ppp = team_cumulative_ppp,\n    opponent_rolling_ftr = team_rolling_ftr,\n    opponent_rolling_made_ftr = team_rolling_made_ftr\n  ) \n\ngameswithsides &lt;- team_side %&gt;% inner_join(opponent_side)\n\ngameswithsides &lt;- gameswithsides %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n))) %&gt;% na.omit()\n\ngameswithsides$team_result &lt;- relevel(gameswithsides$team_result, ref=\"W\")\n\nmodelgames &lt;- gameswithsides %&gt;% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp, \n    team_rolling_atr,\n    opponent_rolling_atr,\n    team_rolling_effective_fga,\n    opponent_rolling_effective_fga,\n    team_cumulative_ppp,\n    opponent_cumulative_ppp,\n    team_rolling_ftr,\n    opponent_rolling_ftr,\n    team_rolling_made_ftr,\n    opponent_rolling_made_ftr,\n    team_result\n    ) %&gt;% na.omit()\n\n\n\n\nCode\ngame_split &lt;- initial_split(modelgames, prop = .8)\ngame_train &lt;- training(game_split)\ngame_test &lt;- testing(game_split)\n\nlightgbm_mod &lt;- \n  boost_tree() %&gt;%\n  set_engine(\"lightgbm\") %&gt;%\n  set_mode(mode = \"classification\")\n\ngame_recipe &lt;- \n  recipe(team_result ~ ., data = game_train) %&gt;% \n  update_role(game_id, game_date, team_short_display_name, opponent_short_display_name, season, new_role = \"ID\") %&gt;%\n  step_normalize(all_predictors())\n\nlightgbm_workflow &lt;- \n  workflow() %&gt;% \n  add_model(lightgbm_mod) %&gt;% \n  add_recipe(game_recipe)\n\nlightgbm_fit &lt;- \n  lightgbm_workflow %&gt;% \n  fit(data = game_train)\n\nrollingteamstats &lt;- gameswithpossession %&gt;% \n  arrange(game_date) %&gt;%\n  group_by(team_short_display_name, season) %&gt;%\n  mutate(\n    team_rolling_ppp = rollmean(points_per_100, k=5, align=\"right\", fill=NA),\n    team_rolling_atr = rollmean(assist_turn_ratio, k=5, align=\"right\", fill=NA),\n    team_rolling_effective_fga = rollmean(effective_fga, k=5, align=\"right\", fill=NA),\n    team_cumulative_ppp = cummean(points_per_100),\n    team_rolling_ftr = rollmean(free_throw_rate, k=5, align=\"right\", fill=NA),\n    team_rolling_made_ftr = rollmean(free_throw_made_rate, k=5, align=\"right\", fill=NA)\n    ) %&gt;% \n  ungroup()\n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_team_id, \n    game_date, \n    season, \n    team_score, \n    team_rolling_ppp,\n    team_rolling_atr,\n    team_rolling_effective_fga,\n    team_cumulative_ppp,\n    team_rolling_ftr,\n    team_rolling_made_ftr\n    ) %&gt;% \n  na.omit() \n\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;% \n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_atr = team_rolling_atr,\n    opponent_rolling_effective_fga = team_rolling_effective_fga,\n    opponent_cumulative_ppp = team_cumulative_ppp,\n    opponent_rolling_ftr = team_rolling_ftr,\n    opponent_rolling_made_ftr = team_rolling_made_ftr\n  ) \n\ngameswithsides &lt;- team_side %&gt;% inner_join(opponent_side)\n\ngameswithsides &lt;- gameswithsides %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n))) %&gt;% na.omit()\n\ngameswithsides$team_result &lt;- relevel(gameswithsides$team_result, ref=\"W\")\n\nmodelgames &lt;- gameswithsides %&gt;% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp, \n    team_rolling_atr,\n    opponent_rolling_atr,\n    team_rolling_effective_fga,\n    opponent_rolling_effective_fga,\n    team_cumulative_ppp,\n    opponent_cumulative_ppp,\n    team_rolling_ftr,\n    opponent_rolling_ftr,\n    team_rolling_made_ftr,\n    opponent_rolling_made_ftr,\n    team_result\n    ) %&gt;% na.omit()\n\n\nCollege basketball can be looked at in many different ways…\nSome use advanced data to analyze the “ins” and “outs” of the game, while some stick to the “eye test” to determine how to predict contests.\nThis year for the NCAA Tournament, I decided to go the advanced analytics route to try and use machine learning to help me predict March Madness. With that being said, I wanted to emphasize a part of the game that I’ve always felt separate the “good” teams from the “great teams.”\nEfficiency.\nYes, efficiency has always been the clear difference maker in my eyes to tell how well a team will do in the tournament. If you can protect the ball and shoot at an efficient percentage, you should set yourself up for success. This being because of course you’re making the most out of every possession. Something that only the “great” teams can do.The specific stats I chose to emphasize efficiency are ones that I felt had a great impact on the game.\nBeginning with Free Throw Rate, which is how often you are getting to the free throw line compared to shooting a field goal, I was surprised to notice that there wasn’t a huge difference in whether teams were winning or losing based on that statistic.\nThe next statistic I chose was one that most models account for, and that is Points Per Possession.\n\n\nCode\nggplot() + \n  geom_point(\n    data=modelgames, aes(x=team_rolling_ppp, y=opponent_rolling_ppp, color=team_result)) +\n   labs(\n     y = \"Opponent Rolling Points Per 100 Possessions\",\n    x = \"Team Rolling Points Per 100 Possessions\",\n     title=\"Does Points Per 100 Possessions Matter?\", subtitle=\"Most teams that win games are scoring high points per 100 possessions while holding the other\\nteam to low points per 100 possessions\", caption=\"Source: Sports Reference | By Cameron Crites\"\n    )\n\n\n\n\n\nAs seen above, Points Per Possession is crucial to being an efficient team and winning games, and even though that might seem obvious, since you’d like to score more than the other team, it’s crazy how the chart is basically split in half for wins and losses based on how many points a team is scoring per 100 possessions.\nThe next statistic that I heavily relied on was Effective Field Goal Percentage, being a stat that takes field goal percentage and adjusts it to make three-pointers worth more than two-pointers.\n\n\nCode\nggplot() + \n  geom_point(\n    data=modelgames, aes(x=team_rolling_effective_fga, y=opponent_rolling_effective_fga, color=team_result)) +\n   labs(\n     y = \"Opponent Rolling Effective FG%\",\n    x = \"Team Rolling Effective FG%\",\n     title=\"Does Effective FG% Matter?\", subtitle=\"Most teams that win games are shooting at a high Effective Field Goal percentage, while holding\\ntheir opponents to a low percentage\", caption=\"Source: Sports Reference | By Cameron Crites\"\n    )\n\n\n\n\n\nAs seen above, once again an efficiency statistic seems to have a great say in whether a team will win or lose. A high Effective Field Goal Percentage is often resulting in wins, and similar to Points Per 100 Possessions, a split can be seen down the middle in wins vs. losses.\nThe last major statistic used to emphasize efficiency in this model is Assist/Turnover Ratio, being how many assists you’re recording per times turning over the basketball. Obviously, turnovers are not efficient since that means you’re not getting a shot on the basket, so this stat means a lot for a teams efficiency level every game.\n\n\nCode\nggplot() +\ngeom_point(\ndata=modelgames, aes(x=team_rolling_atr, y=opponent_rolling_atr, color=team_result)) +\nlabs(\ny = \"Opponent Rolling Assist/Turnover Ratio\",\nx = \"Team Rolling Assist/Turnover Ratio\",\ntitle=\"Does Assist/Turnover Ratio Matter?\", subtitle=\"Most teams that win games are recording many assists without turning the ball over\", caption=\"Source: Sports Reference | By Cameron Crites\"\n)\n\n\n\n\n\nOnce again, we see a disparity between teams winning and losing games based on if they’re being efficient, with this case being assisting on a basket vs. turning the ball over. Although this graph may not be as consistent as the other statistical measurements, there’s not doubt it could still be useful in the model ran.\nSo with all of this being said, how did the model run? Did the efficiency categories we determined to be important help predict who would win in the NCAA Tournament?\nNot really.\nAttached below is photos of what my efficiency model predicted, as well as the South region’s first round based on the model’s predictions.\n\n\nCode\nsouthround1games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Texas A&M-CC\"\n) %&gt;% add_row(\n  team_short_display_name=\"Maryland\",\n  opponent_short_display_name=\"West Virginia\"\n) %&gt;% add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_short_display_name=\"Charleston\"\n) %&gt;% add_row(\n  team_short_display_name=\"Virginia\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"NC State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_short_display_name=\"UCSB\"\n) %&gt;% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Utah State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_short_display_name=\"Princeton\"\n)\n\nsouthround1games &lt;- modelgames %&gt;% \n  group_by(team_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  select(-team_result, -starts_with(\"opponent\")) %&gt;% \n  right_join(southround1games)\n\nsouthround1games &lt;- modelgames %&gt;% \n  group_by(opponent_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  ungroup() %&gt;% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% \n  right_join(southround1games)\n\nsouthround1 &lt;- lightgbm_fit %&gt;% predict(new_data = southround1games) %&gt;%\n  bind_cols(southround1games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround1 &lt;- lightgbm_fit %&gt;% predict(new_data = southround1games, type=\"prob\") %&gt;%\n  bind_cols(southround1) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\n\n\nCode\nsouthround1 %&gt;% \n  top_n(8,wt=.pred_class) %&gt;% \n  select(team_short_display_name, .pred_class, .pred_W, opponent_short_display_name) %&gt;%\n  arrange(desc(.pred_W)) %&gt;% \n  gt() %&gt;%   \n  cols_label(\n    team_short_display_name = \"Team\",\n    .pred_class = \"Prediction\",\n    .pred_W = \"Win Confidence\",\n    opponent_short_display_name = \"Opponent\"\n  ) %&gt;% \n  tab_header(\n    title = \"How did the model predict the South Region's first round?\",\n    subtitle = \"While predicting some games correctly, like Furman over Virginia, Alabama and San Diego St. losing highlights a first round blunder\"\n  ) %&gt;% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %&gt;% tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %&gt;%\n  tab_source_note(\n    source_note = md(\"**By:** Cameron Crites  |  **Source:** Sports Reference\")\n  )\n\n\n\n\n\n\n  \n    \n      How did the model predict the South Region's first round?\n    \n    \n      While predicting some games correctly, like Furman over Virginia, Alabama and San Diego St. losing highlights a first round blunder\n    \n  \n  \n    \n      Team\n      Prediction\n      Win Confidence\n      Opponent\n    \n  \n  \n    Arizona\nW\n0.5832132\nPrinceton\n    Maryland\nW\n0.5245661\nWest Virginia\n    Creighton\nW\n0.5123381\nNC State\n    Baylor\nL\n0.4900643\nUCSB\n    Alabama\nL\n0.4788991\nTexas A&M-CC\n    Missouri\nL\n0.4644879\nUtah State\n    San Diego St\nL\n0.3834324\nCharleston\n    Virginia\nL\n0.3246128\nFurman\n  \n  \n    \n      By: Cameron Crites  |  Source: Sports Reference\n    \n  \n  \n\n\n\n\n \n\n\nYikes. Doesn’t look great, I know. However, there are some positive takeaways from this!\nFor one, my model predicted Furman to win the National Championship! Now, obviously they didn’t do that, and in fact, they only won one game, but they did defeat Virginia in a major upset in the first round. And why did they defeat Virginia? Because of a crucial turnover by Virginia in the final seconds to which Furman capitalized. Did my model predict that? Probably not, but it certainly knew about the difference in efficiency between the two teams, which turned out to be the deciding factor as to why Virginia lost.\nSo overall, does efficiency matter?\nI would say it does. If you look closely into my bracket there are some games(especially late in the tournament) in which my model made the right choice and efficiency turned out to be a big deal, but ultimately, the main thing I’m missing here is some way of differentiating strength of schedule for teams. A team like Furman could be ultra-efficient because they haven’t played anyone to the level of the teams they played in the tournament, and for those games efficiency may not matter as much when there’s a severe difference in talent.\nSo next time, I would want to find a way to consider strength of schedule while emphasizing efficiency, and I got a really good feeling that I could make a model that predicts the NCAA Tournament very accurately."
  },
  {
    "objectID": "posts/who-is-the-best-goal-scorer-in-the-nhl/index.html",
    "href": "posts/who-is-the-best-goal-scorer-in-the-nhl/index.html",
    "title": "Who is the Best Goal Scorer in the NHL?",
    "section": "",
    "text": "Over the course of the last few years, the National Hockey League has been blessed with some incredible talent, and with incredible talent, comes debate.\nOne common debate in every major sports league is the question of, “Who is the Best Player?” and thankfully, there is not much of a disagreement for NHL fans on who that is.\nConnor McDavid. It wouldn’t take much research and debate to convince a common hockey fan that McDavid is the best of the bunch.\nWith that being said, because there is no debate on who the best player in the NHL is, fans have replaced that conflict with a new one, who is the best “Goal Scorer” in the league? That is a more complex and disputable question.\nThe simple answer to this question would be Auston Matthews of the Toronto Maple Leafs, who leads the league in goals and shots. But is he statistically the best? Let’s find out.\nThe players that will be used in this experiment will be the top 20 goal scorers in the NHL this season, because in order to be in the conversation of the best goal scorer in the NHL you should be in the top 20 of that category.\nIn order to solve this question, the first statistic that needs to be evaluated is who scores goals as a majority of their points?\nFor those who don’t know how NHL scoring works, there are two ways in which players can receive points: goals and assists. For this experiment, goals will be the focus, and what needs to be figured out first is what players score goals as a majority of their points, rather than assists.\n\n\n\n\n\n\n  \n    \n      The Top 10 Players in Percentage of Points that come from Goals\n    \n    \n      Chris Kreider dominates the rest of the league, as most of his points come from goals\n    \n  \n  \n    \n      Player\n      Team\n      Gls\n      PTS\n      Percentage of Points that are Goals\n    \n  \n  \n    Chris Kreider\nNYR\n50\n72\n69.44444\n    Troy Terry\nANA\n36\n63\n57.14286\n    Tage Thompson\nBUF\n36\n63\n57.14286\n    Auston Matthews\nTOR\n58\n102\n56.86275\n    Alex Ovechkin\nWSH\n48\n87\n55.17241\n    David Pastrnak\nBOS\n38\n71\n53.52113\n    Alex DeBrincat\nCHI\n39\n73\n53.42466\n    Leon Draisaitl\nEDM\n54\n105\n51.42857\n    Jason Robertson\nDAL\n36\n70\n51.42857\n    Filip Forsberg\nNSH\n38\n75\n50.66667\n  \n  \n    \n      By: Cameron Crites  |  Source: Hockey Reference\n    \n  \n  \n\n\n\n\nAs seen above, Chris Kreider of the New York Rangers is well ahead of anyone else in the NHL in percentage of points that come from goals.\nNow some fans would argue that his percentage is inflated because of his lack of assists, but with 50 goals, Kreider has established himself as a top five goal scorer in the league, so the fact that his assist numbers are low does not affect his ability to score the puck.\nMoving forward, another key stat in finding the best goal scorer in the NHL is shooting percentage. How often are players scoring the puck when they shoot it?\n\n\n\n\n\nOne again, the most impressive takeaway is none other than Chris Kreider, a player who is never discussed in the debate of best goal scorers in the NHL.\nKreider and Leon Draisaitl of the Edmonton Oilers sit well on this chart as players who are in the top three in the NHL in goals while not being in the top five in shots. Meanwhile, highly-toubted goal scorers Alex Ovechkin and David Pastrnak are top three in the league in shots while not having as many goals as Kreider, Draisaitl or Auston Matthews.\nSpeaking of Matthews, it was mentioned earlier that the Maple Leafs star leads the league in shots and goals by a large margin, but is it fair to credit his heavy goal amounts to the number of shots he takes?\nWell, with a shooting percentage lower than Draisaitl and Kreider, that would be a fair argument to make.\nThe last factor of the game that must be analyzed before deciding the best goal scorer in the NHL is which players are scoring goals in power-plays vs. when they’re in even-strength.\nBecause scoring goals with one man up is easier then in even-strength, the best goal scorers should be able to consistently score in both situations. So let’s take a look at which players can score the puck most effectively in even-strength.\n\n\n\n\n\nThis is where the Auston Matthews argument is most effective. Matthews, while scoring a large amount during the power-play, gets the majority of his goals through even-strength opportunities.\nNow what about Kreider and Draisaitl? Well, a much different story to say the least.\nBoth players rely heavily on power-plays to score goals, especially Kreider, who has scored more power-play goals this year than even-strength goals, which is unheard of.\nSo why is it that Kreider and Draisaitl score more often when on the power-play? The main reason for this would be their teammates, and ultimately, it’s most likely the players teammates that will decide this debate.\nChris Kreider and Leon Draisaitl both have the pleasure of being on the same even-strength and power-play lines as elite passers of the puck. Kreider has Artemi Panarin and Adam Fox, who are both top 15 in the league in assists, while Draisaitl has Connor McDavid as his running-mate, who is second in the league in assists.\nAuston Matthews, unlike the other two, is widely considered to be the best player on his team. Yes, he has some great players around him, Mitch Marner and John Tavares to name a couple, but whether those players affect his ability to score goals like Kreider and Drasaitl’s linemates do is unlikely.\nNow, with all of this being said, with all of the statistics utilized, who is the best goal scorer in the National Hockey League?\nWell, there’s still not exactly a clear answer.\nOne clear answer that was figured out with this data is that Chris Kreider is by far the most underrated goal scorer in the NHL, but is he the best?\nIt depends on what you’re looking for. If you’re looking for a player that shoots at a high percentage and can score easily on the power-play, then Chris Kreider would be the choice. Now if the power-play doesn’t matter as much to you and you value the player’s ability to score goals while being the star of his team, than Auston Matthews would make sense.\nUltimately, there may never be a clear answer to this question, but what can be acknowledged is the sheer amount of goal scoring talent in the NHL today, and how each player has their own unique set of strengths when it comes to scoring the puck.\nThe code that generated these graphs can be found [here] (https://github.com/cameroncrites/Notebook2/blob/main/project2.Rmd)"
  },
  {
    "objectID": "posts/predicting-the-best-rookie-wide-receivers-in-the-nfl-this-year/index.html",
    "href": "posts/predicting-the-best-rookie-wide-receivers-in-the-nfl-this-year/index.html",
    "title": "Predicting the Best Rookie Wide Receivers in the NFL this year",
    "section": "",
    "text": "This NFL Draft, we were certainly blessed with a number of wide receivers that showcase elite potential in the NFL. From USC’s Jordan Addison to Boston College’s Zay Flowers, and everywhere in between, the first couple rounds of the draft had high-level receiving talent go to teams that will be perfect fits for their specific skill-sets.\nWith that being said, in the world of fantasy football, which former draft prospects will best succeed with their new teams? And how can we predict how they’ll perform?\nThat’s where modeling comes in to play. To predict what receivers will score the most fantasy points their rookie year, I ran a model centered around stats I felt were important and based it off how receivers in the past have performed, particularly “high-level” NFL receivers in the league today.\nAs for the stats I used, I utilized basic collegiate stats, such as touchdowns and yards, however, I also emphasized stats such as yards-per_reception and player rating, in order to determine the amount of fantasy points they’ll record. The results of this projection are as follows…\n\n\nCode\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(gt)\n\nset.seed(1234)\n\nwrstats &lt;- read_csv(\"https://mattwaite.github.io/sportsdatafiles/wrdraftedstatswithratings.csv\") %&gt;% mutate(FantPt = case_when(FantPt == 0 ~ NA, TRUE ~ FantPt))\n\nwrselected &lt;- wrstats %&gt;%\n  select(\n    name,\n    year,\n    college_team,\n    nfl_team,\n    overall,\n    total_yards,\n    total_touchdowns,\n    total_ypr,\n    rating,\n    FantPt\n  ) %&gt;% na.omit()\n\n\n\n\nCode\ncurrentwrstats &lt;- read_csv(\"https://mattwaite.github.io/sportsdatafiles/currentwrstats.csv\")\n\ncurrentwrselected &lt;- currentwrstats %&gt;%\n  select(\n    name,\n    year,\n    college_team,\n    nfl_team,\n    overall,\n    total_yards,\n    total_touchdowns,\n    total_ypr,\n    rating\n  ) %&gt;% na.omit()\n\n\n\n\nCode\nplayer_split &lt;- initial_split(wrselected, prop = .8)\n\nplayer_train &lt;- training(player_split)\nplayer_test &lt;- testing(player_split)\n\nplayer_recipe &lt;- \n  recipe(FantPt ~ ., data = player_train) %&gt;%\n  update_role(name, year, college_team, nfl_team, new_role = \"ID\")\n\nxg_mod &lt;- boost_tree(\n  trees = tune(), \n  learn_rate = tune(),\n  tree_depth = tune(), \n  min_n = tune(),\n  loss_reduction = tune(), \n  sample_size = tune(), \n  mtry = tune(), \n  ) %&gt;% \n  set_mode(\"regression\") %&gt;% \n  set_engine(\"xgboost\")\n\nxg_workflow &lt;- \n  workflow() %&gt;% \n  add_model(xg_mod) %&gt;% \n  add_recipe(player_recipe)\n\nxgb_grid &lt;- grid_latin_hypercube(\n  trees(),\n  tree_depth(),\n  min_n(),\n  loss_reduction(),\n  sample_size = sample_prop(),\n  finalize(mtry(), player_train),\n  learn_rate()\n)\n\nplayer_folds &lt;- vfold_cv(player_train)\n\nxgb_res &lt;- tune_grid(\n  xg_workflow,\n  resamples = player_folds,\n  grid = xgb_grid,\n  control = control_grid(save_pred = TRUE)\n)\n\nbest_rmse &lt;- select_best(xgb_res, \"rmse\")\n\nfinal_xgb &lt;- finalize_workflow(\n  xg_workflow,\n  best_rmse\n)\n\nxg_fit &lt;- \n  final_xgb %&gt;% \n  fit(data = player_train)\n\n\n\n\nCode\ncurrentxgpredict &lt;- \n  xg_fit %&gt;% \n  predict(new_data = currentwrselected) %&gt;%\n  bind_cols(currentwrselected) \n\ncurrentxgpredict %&gt;% \n  top_n(5,wt=.pred) %&gt;% \n  select(name, nfl_team, overall, .pred) %&gt;%\n  arrange(desc(.pred)) %&gt;% \n  gt() %&gt;%   \n  cols_label(\n    name = \"Player\",\n    nfl_team = \"Team\",\n    overall = \"Pick\",\n    .pred = \"Projected Fant. Pts\"\n  ) %&gt;% \n  tab_header(\n    title = \"Who will be the Top 5 Rookie Fantasy Wide Receivers this year?\",\n    subtitle = \"Jordan Addison projects to finish first amongst all rookies in Fantasy Football this year\"\n  ) %&gt;% tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %&gt;% tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %&gt;%\n  tab_source_note(\n    source_note = md(\"**By:** Cameron Crites  |  **Source:** Sports Reference\")\n  )\n\n\n\n\n\n\n  \n    \n      Who will be the Top 5 Rookie Fantasy Wide Receivers this year?\n    \n    \n      Jordan Addison projects to finish first amongst all rookies in Fantasy Football this year\n    \n  \n  \n    \n      Player\n      Team\n      Pick\n      Projected Fant. Pts\n    \n  \n  \n    Quentin Johnston\nLos Angeles\n21\n86.18442\n    Jordan Addison\nMinnesota\n23\n81.17528\n    Jaxon Smith-Njigba\nSeattle\n20\n72.59473\n    Zay Flowers\nBaltimore\n22\n66.56978\n    Jayden Reed\nGreen Bay\n50\n62.22466\n  \n  \n    \n      By: Cameron Crites  |  Source: Sports Reference\n    \n  \n  \n\n\n\n\nAs you can see, Quentin Johnston is projected to have the most fantasy points this year with…86 points. Ya, that’s not great. Averaging about 5 points a game. So, what does my model think?\nThat’s not a lot of first round receivers that are going to make a huge difference. They won’t have the effect that first rounders in the past have had, which honestly, is not a crazy prediction. Especially when you consider that a ton of rookies don’t always produce to expectations in their first year. So overall, this prediction is bold but not unrealistic.\nNow, when considering this result compared to past NFL wide receiving stars, it should be analyzed the stats their rookie years compared to the rookies this year. This next model will compare five NFL stars to the Top 5 rookies projected. It will compare their total yards-per-reception, projected fantasy points and player rating from their rookie seasons.\n\n\n\n\n\nBased on this, it seems no rookie will come close to any of the current NFL stars in fantasy points, however, we have insight into why the model predicted what it did. Johnston was the choice to finish first in fantasy points, and as seen, that could be because of his high yards-per-reception and player rating in college, while a player like Jayden Reed didn’t have a very high rating for either of those stats.\nUltimately, only time will tell how these rookie receivers will perform, but there is no doubt that Quentin Johnston on the Chargers will be a name to watch this upcoming season."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "QuartoBlog",
    "section": "",
    "text": "Predicting the Best Rookie Wide Receivers in the NFL this year\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMay 10, 2023\n\n\nCameron Crites\n\n\n\n\n\n\n  \n\n\n\n\nAn Efficient Disaster: Why efficiency doesn’t always predict wins and losses in college basketball\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApr 24, 2023\n\n\nCameron Crites\n\n\n\n\n\n\n  \n\n\n\n\nWho is the Best Goal Scorer in the NHL?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApr 19, 2022\n\n\nCameron Crites\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]